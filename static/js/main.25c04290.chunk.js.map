{"version":3,"sources":["images/stop.svg","images/play.svg","componenents/Transport/Transport.tsx","componenents/TrackControl/TrackControl.tsx","redux/hooks.ts","redux/slices/waveformStateSlice.ts","redux/slices/waveformIdsSlice.ts","utils/utils.ts","utils/canvas.tsx","componenents/Main/Sequencer/BarNumbersAndLines/BarNumbersAndLines.tsx","audio-files/audio1.mp3","constants/constants.ts","utils/loadAudioFile.js","utils/waveformPositioning.ts","utils/mouseInputs.ts","componenents/Waveform/HandleDrag/HandleDrag.tsx","componenents/Waveform/Canvas/Canvas.tsx","componenents/Waveform/HandleZoom/HandleZoom.tsx","utils/zoomLevels.tsx","componenents/Waveform/Waveform.tsx","componenents/Main/Sequencer/TrackLane/TrackLane.tsx","redux/slices/scrollPositionSlice.ts","componenents/Main/Main.tsx","redux/slices/zoomLevelSlice.ts","utils/rangeSlider.ts","utils/handleMouseInput.ts","componenents/ZoomSlider/ZoomSlider.tsx","componenents/BottomSection/ZoomControl/ZoomControl.tsx","utils/dial.ts","componenents/Dial/Dial.tsx","componenents/VolumeSlider/VolumeSlider.tsx","componenents/BottomSection/WaveformControl/WaveformControl.tsx","componenents/BottomSection/BottomSection.tsx","redux/slices/barNumberDataSlice.ts","componenents/Utilties/BarNumberData.tsx","componenents/FileBrowser/FileBrowser.styles.tsx","componenents/FileBrowser/FileBrowser.tsx","redux/slices/sequencerLengthSlice.ts","componenents/Utilties/SetSequencerLength.tsx","componenents/App/App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["Transport","className","type","min","max","step","src","stop","alt","play","value","TarackControl","useAppDispatch","useDispatch","useAppSelector","useSelector","waveformStatesSlice","createSlice","name","initialState","reducers","addWaveform","state","action","payload","id","position","startPosition","startOffset","gain","mouseDown","setPosition","setStartOffset","setGain","setMouseDown","actions","waveformIdsSlice","addId","removeId","convertRemToPixels","rem","parseFloat","getComputedStyle","document","documentElement","fontSize","convertPixelsToRem","pixels","getVariableStyle","varName","body","getPropertyValue","handleRangeBias","x","bias","k","Math","pow","mapNumberRange","val","in_min","in_max","out_min","out_max","addGenericEventListener","ref","callback","addEventListener","removeEventListener","font","strokeStyle","fillStyle","applyCtxProperties","ctx","values","propertyNames","Object","keys","i","length","calculateScaleX","currentScale","drawLine","xPos","startY","endY","moveTo","lineTo","drawText","y","text","fillText","setPixelsPerLine","pixels_per_bar","spacingInRem","pixels_per_line","generateWaveform","canvas","parentRef","waveform","startSample","height","current","offsetHeight","width","getContext","lineWidth","channel","beginPath","endSample","max_sample","scaleY","min_sample","closePath","stroke","fill","amplitude","pixelsPerBar","bpm","zoomLevel","pixelsPerSecond","barsPerSecond","calculateSequencerLengthPx","lengthInBars","createCanvases","refObject","total","start","html","string","element","push","drawBarNumbers","refObj","barNumberData","pixelsPerSubdividingLine","style","left","clearRect","j","currentPos","count","drawBarLines","barNumberState","BarNumbersAndLines","componentClassName","canvasClassName","drawToCanvas","useState","canvases","setCanvases","componentRef","useRef","canvasRefObj","sequencerLengthBars","sequencerLength","requiredLengthBars","sequencerLengthPx","useEffect","canvasesNeeded","ceil","newCanvases","overflow","component","minimumZoomLevel","audioContext","AudioContext","setAudio","a","fetch","audioFile","then","response","arrayBuffer","buffer","options","audio_context","array_buffer","scale","Promise","resolve","reject","WaveformData","createFromAudio","err","snapToGrid","gridSize","scalingFactor","closestGridPoint","floor","defaultMouseState","isDown","end","distanceTravelled","HandlePosition","currentPosition","lastPosition","waveformPosition","setWaveformPosition","mouse","setMouse","mouseRef","zoomLevelRef","dispatch","e","newState","clientX","clientY","handleMouseDown","preventDefault","onMouseDown","window","handleMouseMove","mouseState","distancedTravelled","onMouseMove","handleMouseUp","onMouseUp","pos","Canvas","canvasRefs","parent","refs","size","generateWaveforms","HandleZoom","trackId","setScalingFactor","waveformStates","setHtml","zoomLevelRefs","zoomedWaveform","resample","div","createZoomLevelElements","intermediateZoomScale","currentScalingFactor","currentWaveform","opacity","scaleAmount","transformOrigin","transform","Waveform","setWaveform","loadAudioFile","TrackLane","ids","waveformIds","scrollPositionSlice","barsLeft","barsRight","pxLeft","pxRight","setScrollPosition","Main","setState","sequencerRef","scrollPosition","sequencer","scrollLeft","newScrollState","offsetWidth","onScroll","zoomLevelStateSlice","setZoomLevel","setValueToPos","mainAxisLength","mainAxisOffset","knubOffset","valueInRem","setValue","s","currentValue","lastValue","this","MouseInput","handleDown","handleMove","handleUp","bind","ZoomSlider","init","onChange","knubRef","canvasRef","containerRef","svgRef","accentColor","darkAlt","knub","container","svg","knubSize","padding","crossAxisLength","strokeWidth","applyStyles","interval","viewBox","d","ZoomControl","mappedValue","DialState","Dial","knobRef","log","logType","dbType","waveformId","dialPos","setDialPos","initDialVal","initializeDialPos","dial","change","valueInDeg","mapMouseToDial","knob","VolumeSlider","handleRef","localMouseDown","setLocalMouseDown","dipatch","handle","WaveformControl","BottomSection","barNumberDataSlice","loaded","setBarNumberData","setLoaded","BarNumberData","barsToBeDisplayed","endPos","barToLineRatio","result","canvasOffset","currentRef","createBarNumberData","border","Wrapper","styled","props","theme","Browser","Title","background","ButtonWrapper","button","rotation","Quarter","Button","onClick","RotatedLetter","open","FileBrowser","setOpen","sequencerLengthSlice","lengthBars","setLength","setRequiredLength","SetSequencerLength","sequencerWidthBars","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","waveformStateReducer","waveformIdsReducer","zoomLevelReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.25c04290.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stop.aea36ecb.svg\";","export default __webpack_public_path__ + \"static/media/play.353c4e28.svg\";","import \"./Transport.scss\";\nimport stop from \"../../images/stop.svg\";\nimport play from \"../../images/play.svg\";\n\nexport default function Transport() {\n  return (\n    <div className=\"Transport\">\n      <div className=\"Transport__grid\">\n        <div className=\"Transport__grid__left\">\n          <input type=\"range\" min=\"0\" max=\"100\" step=\"1\"></input>\n          <div className=\"volume-feedback\"></div>\n        </div>\n\n        <div className=\"Transport__grid__center\">\n          <button className=\"button__track-forwards\"></button>\n          <button className=\"button__stop\">\n            <img src={stop} alt=\"stop icon\"></img>\n          </button>\n          <button className=\"button__play-pause\">\n            <img src={play} alt=\"play icon\"></img>\n          </button>\n          <button className=\"button__track-backwards\"></button>\n        </div>\n\n        <div className=\"Transport__grid__right\">\n          <input value=\"120\"></input>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./TrackControl.scss\";\n\nexport default function TarackControl() {\n  return (\n    <div className=\"TrackControl\">\n      <div className=\"TrackControl__solo-mute\">\n        <button className=\"button__mute\">M</button>\n        <button className=\"button__solo\">S</button>\n      </div>\n      <div className=\"TrackControl__controls\">\n        <div className=\"track-name-and-volume-slider-container\">\n          <div className=\"track-name\">Track 1</div>\n          <input\n            className=\"slider__volume\"\n            type=\"range\"\n            min=\"0\"\n            max=\"100\"\n            step=\"1\"\n          ></input>\n        </div>\n        <div className=\"button__automation__container\">\n          <button className=\"button__automation\">A</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nexport interface WaveformState {\n  position: number;\n  startOffset: number;\n  gain: number;\n  mouseDown: boolean;\n}\n\nexport interface WaveformStates {\n  [key: string]: WaveformState;\n}\n\ninterface SetState {\n  id: string;\n  value: number;\n}\n\ninterface SetMouseState {\n  id: string;\n  value: boolean;\n}\n\ninterface AddWaveform {\n  id: string;\n  startPosition: number;\n}\n\nconst initialState: WaveformStates = {};\n\nexport const waveformStatesSlice = createSlice({\n  name: \"Waveform States\",\n  initialState,\n  reducers: {\n    addWaveform: (state, action: PayloadAction<AddWaveform>) => {\n      state[action.payload.id] = {\n        position: action.payload.startPosition,\n        startOffset: 0,\n        gain: 1,\n        mouseDown: false,\n      };\n    },\n    setPosition: (state, action: PayloadAction<SetState>) => {\n      state[action.payload.id].position = action.payload.value;\n    },\n    setStartOffset: (state, action: PayloadAction<SetState>) => {\n      state[action.payload.id].startOffset = action.payload.value;\n    },\n    setGain: (state, action: PayloadAction<SetState>) => {\n      state[action.payload.id].gain = action.payload.value;\n    },\n    setMouseDown: (state, action: PayloadAction<SetMouseState>) => {\n      state[action.payload.id].mouseDown = action.payload.value;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  addWaveform,\n  setPosition,\n  setStartOffset,\n  setGain,\n  setMouseDown,\n} = waveformStatesSlice.actions;\n\nexport const waveformStates = (state: RootState) => state.waveformStates;\n\nexport default waveformStatesSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface WaveformIds {\n  [key: string]: boolean;\n}\n\ninterface WaveformId {\n  id: string;\n}\n\nconst initialState: WaveformIds = {};\n\nexport const waveformIdsSlice = createSlice({\n  name: \"Waveform IDs\",\n  initialState,\n  reducers: {\n    addId: (state, action: PayloadAction<WaveformId>) => {\n      state[action.payload.id] = true;\n    },\n    removeId: (state, action: PayloadAction<WaveformId>) => {\n      delete state[action.payload.id];\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addId, removeId } = waveformIdsSlice.actions;\n\nexport default waveformIdsSlice.reducer;\n","export function convertRemToPixels(rem: number): number {\n  return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\n}\n\nexport function convertPixelsToRem(pixels: number): number {\n  return (\n    pixels / parseFloat(getComputedStyle(document.documentElement).fontSize)\n  );\n}\n\nexport function getVariableStyle(varName: string): string {\n  const style: CSSStyleDeclaration = getComputedStyle(document.body);\n  return style.getPropertyValue(varName);\n}\n\nexport function amplitudeToDecibels(amplitude: number): number {\n  return (20 * Math.log(amplitude)) / Math.LN10;\n}\n\nexport function decibelsToAmplitude(decibels: number): number {\n  return Math.pow(10, decibels / 20);\n}\n\nexport function handleRangeBias(\n  x: number,\n  bias: number,\n  type: \"exp\" | \"log\"\n): number {\n  if (type === \"exp\") {\n    x = 1 - x;\n    let k = Math.pow(1 - bias, 3);\n    k = (x * k) / (x * k - x + 1);\n    return 1 - k;\n  } else {\n    let k = Math.pow(1 - bias, 3);\n    k = (x * k) / (x * k - x + 1);\n    return k;\n  }\n}\n\nexport function mapNumberRange(\n  val: number,\n  in_min: number,\n  in_max: number,\n  out_min: number,\n  out_max: number\n) {\n  return ((val - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n}\n\nexport function addGenericEventListener(\n  ref: HTMLDivElement | (Window & typeof globalThis),\n  type: string,\n  callback: any //Fix this once you figure out why it doesn't allow (e: MouseEvent) => void as a type here. It's is convinced it is an EventListenerOrEventListenerObject which is not compatible with MouseEvent\n): () => void {\n  ref.addEventListener(type, callback);\n  return function () {\n    ref.removeEventListener(type, callback);\n  };\n}\n","import React, { useRef } from \"react\";\nimport { getVariableStyle, convertRemToPixels } from \"./utils\";\nimport WaveformData from \"waveform-data\";\nimport { BarNumberDataState } from \"../redux/slices/barNumberDataSlice\";\n\nexport const lineWidth = 1;\nexport const font = `$1rem serif`;\nexport const strokeStyle = getVariableStyle(\"--light-main\");\nexport const fillStyle = \"#ffffff\";\nexport const minimumLineSpacing = 4;\n\nconst remScale = 1;\nexport const defaultBarSpacing = 4; // This should scale with zoom.\nexport const pixelsPerRem = convertRemToPixels(remScale);\n\n// Create refs\nexport function useCreateRefs(): [\n  React.RefObject<HTMLCanvasElement>,\n  React.RefObject<HTMLDivElement>\n] {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const parentRef = useRef<HTMLDivElement>(null);\n  return [canvasRef, parentRef];\n}\n\ntype CtxStringPropName = \"strokeStyle\" | \"font\" | \"fillStyle\";\ntype CtxNumberPropName = \"lineWidth\";\n\n// any variables passed in inside the values object will has their value applied to the ctx property name that is the same name of the variable.\nexport function applyCtxProperties(\n  ctx: CanvasRenderingContext2D,\n  values: { [key: string]: string | number }\n): void {\n  const propertyNames = Object.keys(values);\n  for (let i = 0; i < propertyNames.length; i += 1) {\n    if (typeof values[propertyNames[i]] === \"string\") {\n      const propName = propertyNames[i] as CtxStringPropName;\n      ctx[propName] = values[propertyNames[i]] as string;\n    } else {\n      const propName = propertyNames[i] as CtxNumberPropName;\n      ctx[propName] = values[propertyNames[i]] as number;\n    }\n  }\n}\n\n// calculates the scale x transform required for the canvas overlay so that it matches the actual waveform zoom level. This works when applied with css scaling. Function is designed to prevet constant redraws to canvas and resampling of waveform zoom level.\nexport function calculateScaleX(currentScale: number): number {\n  if (currentScale >= 2) {\n    currentScale *= 0.5;\n    return calculateScaleX(currentScale);\n  }\n  return currentScale;\n}\n\n// draw vertical lin on canvas at specific x position from 0 y value to height value\nexport function drawLine(\n  ctx: CanvasRenderingContext2D,\n  xPos: number,\n  startY: number,\n  endY: number\n): void {\n  const x = xPos + 0.5;\n  ctx.moveTo(x, startY);\n  ctx.lineTo(x, endY);\n}\n\n// draw text on canvas at specific x and y position\nexport function drawText(\n  ctx: CanvasRenderingContext2D,\n  xPos: number,\n  y: number,\n  text: string\n): void {\n  const x = xPos + 0.5;\n  ctx.fillText(text, x, y);\n}\n\n// Recursively checks to see if lines are becoming too close together, then doubles the length between them if it falls below cetain value;\nexport function setPixelsPerLine(\n  pixels_per_bar: number,\n  spacingInRem: number\n): number {\n  let pixels_per_line = pixels_per_bar;\n  if (pixels_per_line < convertRemToPixels(spacingInRem)) {\n    pixels_per_line *= 2;\n    return setPixelsPerLine(pixels_per_line, spacingInRem);\n  }\n  return pixels_per_line;\n}\n\n// Handles adjust canvas width and redraws content when screen width changes.\nexport function handleResize(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  parentRef: React.RefObject<HTMLDivElement>,\n  trackLane?: boolean // if true, doesn't draw numbers or half length lines. For use in a track lane only.\n): void {\n  canvas.height = parentRef.current?.offsetHeight as number;\n  canvas.width = parentRef.current?.offsetWidth as number;\n  //need to populate canvas here\n}\n\n// adds event listener for page resize and calls handleResize to deal with it\nexport function addResizeEventListeners(\n  canvasRef: React.RefObject<HTMLCanvasElement>,\n  parentRef: React.RefObject<HTMLDivElement>,\n  trackLane?: boolean\n): () => void {\n  const canvas = canvasRef.current as HTMLCanvasElement;\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  handleResize(canvas, ctx, parentRef, trackLane);\n  window.addEventListener(\"resize\", () =>\n    handleResize(canvas, ctx, parentRef, trackLane)\n  );\n  return function () {\n    window.removeEventListener(\"resize\", () =>\n      handleResize(canvas, ctx, parentRef, trackLane)\n    );\n  };\n}\n\n//draw waveform to canvas\nexport function generateWaveform(\n  canvas: HTMLCanvasElement,\n  parentRef: React.RefObject<HTMLDivElement>,\n  waveform: WaveformData,\n  startOffset: number = 0,\n  gain: number = 1,\n  startSample: number = 0,\n  length: number = 10000\n) {\n  canvas.height = parentRef.current?.offsetHeight as number;\n  canvas.width = length;\n  if (startSample + length > waveform.length) {\n    canvas.width = waveform.length - startSample;\n  }\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  // ctx.strokeStyle = \"#164664\";\n  ctx.strokeStyle = \"white\";\n  ctx.lineWidth = 1;\n  ctx.fillStyle = \"white\";\n  const channel = waveform.channel(0);\n  ctx.beginPath();\n\n  let endSample = length + startSample;\n\n  if (endSample > waveform.length) endSample = waveform.length;\n\n  // Loop forwards, drawing the upper half of the waveform\n  for (let x = startSample; x < endSample; x++) {\n    //max possible val = 127\n    const val = channel.max_sample(x);\n    ctx.lineTo(x - startSample + 0.5, scaleY(val, canvas.height, gain) + 0.5);\n  }\n\n  // Loop backwards, drawing the lower half of the waveform\n  for (let x = endSample - 1; x >= startSample; x--) {\n    const val = channel.min_sample(x);\n    ctx.lineTo(x - startSample + 0.5, scaleY(val, canvas.height, gain) + 0.5);\n  }\n\n  ctx.closePath();\n  ctx.stroke();\n  ctx.fill();\n}\n\nfunction scaleY(amplitude: number, height: number, gain: number): number {\n  const range = 256;\n  const offset = 128;\n  return height - ((amplitude * gain + offset) * height) / range;\n}\n\nexport function barsPerSecond(bpm: number): number {\n  const beatsPerSecond = bpm / 60;\n  return beatsPerSecond / 4;\n}\n\nexport function secondsPerBar(bpm: number): number {\n  const beatsPerSecond = bpm / 60;\n  return 1 / (beatsPerSecond / 4);\n}\n\nexport function pixelsPerSecond(zoomLevel: number): number {\n  return 44100 / zoomLevel;\n}\n\nexport function pixelsPerBar(bpm: number, zoomLevel: number): number {\n  return pixelsPerSecond(zoomLevel) / barsPerSecond(bpm);\n}\n\nexport function calculateSequencerLengthPx(\n  lengthInBars: number,\n  bpm: number,\n  zoomLevel: number\n): number {\n  return lengthInBars * pixelsPerBar(bpm, zoomLevel);\n}\n\nexport interface CanvasRefObj {\n  [key: string]: HTMLCanvasElement | null;\n}\n\nexport function createCanvases(\n  refObject: React.MutableRefObject<CanvasRefObj>,\n  total: WaveformData | number,\n  start: number = 0,\n  className: string = \"canvas\"\n): JSX.Element[] {\n  if (typeof total !== \"number\") {\n    total = total.length;\n  }\n  let html: JSX.Element[] = [];\n  let i = start / 10000;\n  let length = start;\n  do {\n    const string = \"_\" + i;\n    const canvas = (\n      <canvas\n        key={string}\n        ref={(element) => (refObject.current[string] = element)}\n        className={className}\n      ></canvas>\n    );\n    html.push(canvas);\n    i += 1;\n    length += 10000;\n  } while (length < total);\n  return html;\n}\n\n// Create array that contains where to draw each bar line on each canvas, and what bar number should be written next to it\nexport function createBarNumberData(\n  endPos: number,\n  zoomLevel: number\n): { count: number; currentPos: number }[][] {\n  const pixels_per_bar = pixelsPerBar(174, zoomLevel);\n  const pixels_per_line = setPixelsPerLine(pixels_per_bar, minimumLineSpacing);\n  const barToLineRatio = pixels_per_line / pixels_per_bar;\n  const result: { count: number; currentPos: number }[][] = [[]];\n  let ref = 0;\n  let count = 1;\n  let canvasOffset = 0;\n  for (let i = 0; i < endPos; i += pixels_per_line) {\n    const currentRef = Math.floor(i / 10000);\n    if (currentRef !== ref) {\n      ref = currentRef;\n      result.push([]);\n      canvasOffset -= 10000;\n    }\n    result[ref].push({ count, currentPos: i + canvasOffset });\n    count += barToLineRatio;\n  }\n  return result;\n}\n\n//Draws lines and numbers using bar number data\nexport function drawBarNumbers(\n  refObj: React.MutableRefObject<CanvasRefObj>,\n  parentRef: HTMLDivElement,\n  barNumberData: BarNumberDataState[][],\n  zoomLevel: number\n): void {\n  const pixels_per_bar = pixelsPerBar(174, zoomLevel);\n  const pixels_per_line = setPixelsPerLine(pixels_per_bar, minimumLineSpacing);\n  const pixelsPerSubdividingLine = pixels_per_line / 4;\n  for (let i = 0; i < barNumberData.length; i += 1) {\n    const canvas = refObj.current[\"_\" + i]!;\n    if (canvas) {\n      canvas.width = 10000;\n      canvas.height = parentRef.offsetHeight;\n      canvas.style.left = 10000 * i + \"px\";\n      const ctx = canvas.getContext(\"2d\")!;\n      applyCtxProperties(ctx, { font, lineWidth, strokeStyle, fillStyle });\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      for (let j = 0; j < barNumberData[i].length; j += 1) {\n        drawLine(ctx, barNumberData[i][j].currentPos + 0.5, 0, canvas.height);\n        drawText(\n          ctx,\n          barNumberData[i][j].currentPos + 0.5 + 3,\n          canvas.height / 3,\n          barNumberData[i][j].count + \"\"\n        );\n        drawLine(\n          ctx,\n          barNumberData[i][j].currentPos + pixelsPerSubdividingLine + 0.5,\n          canvas.height,\n          canvas.height / 1.5\n        );\n        drawLine(\n          ctx,\n          barNumberData[i][j].currentPos + pixelsPerSubdividingLine * 2 + 0.5,\n          canvas.height,\n          canvas.height / 1.5\n        );\n        drawLine(\n          ctx,\n          barNumberData[i][j].currentPos + pixelsPerSubdividingLine * 3 + 0.5,\n          canvas.height,\n          canvas.height / 1.5\n        );\n      }\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n\n//Draw bar lines\nexport function drawBarLines(\n  refObj: React.MutableRefObject<CanvasRefObj>,\n  parentRef: HTMLDivElement,\n  barNumberState: BarNumberDataState[][],\n  zoomLevel: number\n): void {\n  const pixels_per_bar = pixelsPerBar(174, zoomLevel);\n  const pixels_per_line = setPixelsPerLine(pixels_per_bar, minimumLineSpacing);\n  const pixelsPerSubdividingLine = pixels_per_line / 4;\n  for (let i = 0; i < barNumberState.length; i += 1) {\n    const canvas = refObj.current[\"_\" + i]!;\n    if (canvas) {\n      canvas.width = 10000;\n      canvas.height = parentRef.offsetHeight;\n      canvas.style.left = 10000 * i + \"px\";\n      const ctx = canvas.getContext(\"2d\")!;\n      applyCtxProperties(ctx, { font, lineWidth, strokeStyle, fillStyle });\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.beginPath();\n      for (let j = 0; j < barNumberState[i].length; j += 1) {\n        drawLine(ctx, barNumberState[i][j].currentPos + 0.5, 0, canvas.height);\n        drawLine(\n          ctx,\n          barNumberState[i][j].currentPos + pixelsPerSubdividingLine + 0.5,\n          canvas.height,\n          0\n        );\n        drawLine(\n          ctx,\n          barNumberState[i][j].currentPos + pixelsPerSubdividingLine * 2 + 0.5,\n          canvas.height,\n          0\n        );\n        drawLine(\n          ctx,\n          barNumberState[i][j].currentPos + pixelsPerSubdividingLine * 3 + 0.5,\n          canvas.height,\n          0\n        );\n      }\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport \"./BarNumbersAndLines.scss\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport {\n  createCanvases,\n  CanvasRefObj,\n  calculateSequencerLengthPx,\n} from \"../../../../utils/canvas\";\nimport { BarNumberDataState } from \"../../../../redux/slices/barNumberDataSlice\";\n\nexport default function BarNumbersAndLines({\n  componentClassName,\n  canvasClassName,\n  drawToCanvas,\n}: {\n  componentClassName: string;\n  canvasClassName: string;\n  drawToCanvas: (\n    refObj: React.MutableRefObject<CanvasRefObj>,\n    parentRef: HTMLDivElement,\n    barNumberData: BarNumberDataState[][],\n    zoomLevel: number\n  ) => void;\n}) {\n  const [canvases, setCanvases] = useState<JSX.Element[]>([]);\n  const componentRef = useRef<HTMLDivElement>(null);\n  const canvasRefObj = useRef<CanvasRefObj>({});\n  const { zoomLevel, mouseDown } = useAppSelector((state) => state.zoomLevel);\n  const sequencerLengthBars = useAppSelector(\n    (state) => state.sequencerLength.requiredLengthBars\n  );\n  const barNumberData = useAppSelector((state) => state.barNumberData);\n  let sequencerLengthPx = calculateSequencerLengthPx(\n    sequencerLengthBars,\n    174,\n    zoomLevel\n  );\n\n  // Create required canvases based on sequencer length\n  useEffect(function () {\n    setCanvases(\n      createCanvases(canvasRefObj, sequencerLengthPx, 0, canvasClassName)\n    );\n  }, []);\n\n  useEffect(\n    //Add additional canvases when sequencer length increases\n    function () {\n      const canvasesNeeded = Math.ceil(sequencerLengthPx / 10000);\n      if (canvasesNeeded > canvases.length) {\n        setCanvases((state) => {\n          const newCanvases = createCanvases(\n            canvasRefObj,\n            canvasesNeeded * 10000,\n            state.length * 10000,\n            canvasClassName\n          );\n          const newState = [...state, ...newCanvases];\n          return newState;\n        });\n      }\n      if (componentRef.current) {\n        componentRef.current.style.width = sequencerLengthPx + \"px\";\n        componentRef.current.style.overflow = \"hidden\";\n      }\n    },\n    [sequencerLengthPx]\n  );\n\n  useEffect(\n    function () {\n      const component = componentRef.current;\n      if (component) {\n        drawToCanvas(canvasRefObj, component, barNumberData.value, zoomLevel);\n      }\n    },\n    [zoomLevel, canvases, mouseDown, barNumberData]\n  );\n\n  return (\n    <div className={componentClassName} ref={componentRef}>\n      {canvases}\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/audio1.08952bdd.mp3\";","export const minimumZoomLevel = 128;\n","import WaveformData from \"waveform-data\";\nimport audioFile from \"../audio-files/audio1.mp3\";\nimport { minimumZoomLevel } from \"../constants/constants\";\n// const audioFile = require(\"../audio-files/audio1.mp3\");\n\n//\"https://file-examples-com.github.io/uploads/2017/11/file_example_MP3_700KB.mp3\"\nconst audioContext = new AudioContext();\n\nexport async function loadAudioFile(setAudio) {\n  fetch(audioFile)\n    .then((response) => response.arrayBuffer())\n    .then((buffer) => {\n      const options = {\n        audio_context: audioContext,\n        array_buffer: buffer,\n        scale: minimumZoomLevel,\n      };\n\n      return new Promise((resolve, reject) => {\n        WaveformData.createFromAudio(options, (err, waveform) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(waveform);\n          }\n        });\n      });\n    })\n    .then((waveform) => {\n      setAudio(waveform);\n    });\n}\n","import { MouseState } from \"../types/types\";\nimport { pixelsPerBar } from \"./canvas\";\n\n//Declare function interfaces-----------\ntype SetWaveformPosition = React.Dispatch<\n  React.SetStateAction<{\n    currentPosition: number;\n    lastPosition: number;\n    mouseDown: boolean;\n  }>\n>;\n\ninterface OnMouseDown {\n  (e: MouseEvent): void;\n}\n\ninterface OnMouseMove {\n  (\n    setWaveformPosition: SetWaveformPosition,\n    zoomLevelRef?: React.MutableRefObject<number>,\n    mouseStateRef?: React.MutableRefObject<MouseState>\n  ): void;\n}\n\ninterface OnMouseUp {\n  (setWaveformPosition: SetWaveformPosition): void;\n}\n\ninterface SnapToGrid {\n  (position: number, gridSize: number): number;\n}\n\n//-------------------------------------\n\n//Prevents any unwanted actions on mouse down\nexport const onMouseDown: OnMouseDown = function (e) {\n  e.preventDefault();\n};\n\n// Calculates number of bars/units the waveform needs to move and updates the state\nexport const onMouseMove: OnMouseMove = function (\n  setWaveformPosition,\n  zoomLevelRef,\n  mouseState\n) {\n  setWaveformPosition((state) => {\n    const newState = { ...state };\n    const pixels_per_bar = pixelsPerBar(174, zoomLevelRef?.current!);\n    const distancedTravelled = mouseState?.current.x.distanceTravelled!;\n    const currentPosition =\n      (state.lastPosition * pixels_per_bar + distancedTravelled) /\n      pixels_per_bar;\n    newState.currentPosition = snapToGrid(currentPosition, 1);\n    return newState;\n  });\n};\n\n//Sets the last position property of state to the current position. This value will be used the next time onMouseMove is called\nexport const onMouseUp: OnMouseUp = function (setWaveformPosition) {\n  setWaveformPosition((state) => {\n    const newState = { ...state };\n    newState.lastPosition = newState.currentPosition;\n    return newState;\n  });\n};\n\n//Snaps waveform to nearest grid point as declared in the gridSize parameter\nexport const snapToGrid: SnapToGrid = function (position, gridSize) {\n  const scalingFactor = 1 / gridSize;\n  const closestGridPoint = Math.floor(position * scalingFactor + 0.5);\n  if (closestGridPoint < 0) {\n    return 0;\n  }\n  return closestGridPoint / scalingFactor;\n};\n","type HandleMouse = (\n  e: MouseEvent,\n  setMouse: React.Dispatch<React.SetStateAction<typeof defaultMouseState>>\n) => void;\n\nexport const defaultMouseState = {\n  isDown: false,\n  y: {\n    start: 0,\n    end: 0,\n    distanceTravelled: 0,\n  },\n  x: {\n    start: 0,\n    end: 0,\n    distanceTravelled: 0,\n  },\n};\n\nexport const handleMouseDown: HandleMouse = function (e, setMouse) {\n  setMouse((state) => {\n    const newState = { ...state };\n    newState.isDown = true;\n    newState.x.start = e.clientX;\n    newState.y.start = e.clientY;\n    return newState;\n  });\n};\n\nexport const handleMouseMove: HandleMouse = function (e, setMouse) {\n  setMouse((state) => {\n    const newState = { ...state };\n    newState.x.distanceTravelled = e.clientX - newState.x.start;\n    newState.y.distanceTravelled = newState.y.start - e.clientY;\n    return newState;\n  });\n};\n\nexport const handleMouseUp: HandleMouse = function (e, setMouse) {\n  setMouse((state) => {\n    const newState = { ...state };\n    newState.x.end = e.clientX;\n    newState.y.end = e.clientY;\n    newState.isDown = false;\n    return newState;\n  });\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  onMouseDown,\n  onMouseMove,\n  onMouseUp,\n} from \"../../../utils/waveformPositioning\";\nimport {\n  handleMouseDown,\n  handleMouseMove,\n  handleMouseUp,\n} from \"../../../utils/mouseInputs\";\nimport { useAppDispatch, useAppSelector } from \"../../../redux/hooks\";\nimport { setPosition } from \"../../../redux/slices/waveformStateSlice\";\nimport { addGenericEventListener } from \"../../../utils/utils\";\nimport { defaultMouseState } from \"../../../utils/mouseInputs\";\n\nexport default function HandlePosition({\n  parentRef,\n}: {\n  parentRef: React.RefObject<HTMLDivElement>;\n}) {\n  const [waveformPosition, setWaveformPosition] = useState({\n    currentPosition: 0,\n    lastPosition: 0,\n    mouseDown: false,\n  });\n\n  const [mouse, setMouse] = useState({\n    ...defaultMouseState,\n  });\n  const mouseRef = useRef(mouse);\n\n  const { zoomLevel } = useAppSelector((state) => state.zoomLevel);\n  const zoomLevelRef = useRef(zoomLevel);\n\n  const dispatch = useAppDispatch();\n\n  // Add event listeners to handle mouse inputs and adjust waveform position accordingly\n  useEffect(\n    function () {\n      const parent = parentRef.current!;\n      addGenericEventListener(parent, \"mousedown\", (e: MouseEvent) => {\n        handleMouseDown(e, setMouse);\n        onMouseDown(e);\n      });\n      addGenericEventListener(window, \"mousemove\", (e: MouseEvent) => {\n        if (mouseRef.current.isDown) {\n          handleMouseMove(e, setMouse);\n          onMouseMove(setWaveformPosition, zoomLevelRef, mouseRef);\n        }\n      });\n      addGenericEventListener(window, \"mouseup\", (e: MouseEvent) => {\n        if (mouseRef.current.isDown) {\n          handleMouseUp(e, setMouse);\n          onMouseUp(setWaveformPosition);\n        }\n      });\n    },\n    [parentRef.current]\n  );\n\n  useEffect(\n    function () {\n      const pos = waveformPosition.currentPosition;\n      dispatch(setPosition({ id: \"1\", value: pos }));\n    },\n    [waveformPosition.currentPosition]\n  );\n\n  useEffect(\n    function () {\n      zoomLevelRef.current = zoomLevel;\n      mouseRef.current = mouse;\n    },\n    [zoomLevel, mouse]\n  );\n\n  return null;\n}\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./Canvas.scss\";\nimport WaveformData from \"waveform-data\";\nimport {\n  generateWaveform,\n  createCanvases,\n  CanvasRefObj,\n} from \"../../../utils/canvas\";\n\nexport default function Canvas({ waveform }: { waveform: WaveformData }) {\n  const [canvases, setCanvases] = useState<JSX.Element[]>([]);\n  const componentRef = useRef<HTMLDivElement>(null);\n\n  const canvasRefs = useRef<CanvasRefObj>({});\n\n  //Generates waveform for each canvas using the refs\n  function generateWaveforms(refs: React.MutableRefObject<CanvasRefObj>): void {\n    const size = Object.keys(refs.current).length;\n    let position = 0;\n    for (let i = 0; i < size; i += 1) {\n      const canvas = refs.current[\"_\" + i]!;\n      generateWaveform(canvas, componentRef, waveform, 0, 1, position, 10000);\n      canvas!.style.left = position + \"px\";\n      position += 10000;\n    }\n  }\n\n  useEffect(function () {\n    //Creates required canvas elements and assigns a ref\n    setCanvases(createCanvases(canvasRefs, waveform));\n    const parent = componentRef.current!;\n    const component = componentRef.current!;\n    component.style.width = waveform.length + \"px\";\n    component.style.height = parent.offsetHeight + \"px\";\n  }, []);\n\n  useEffect(\n    function () {\n      generateWaveforms(canvasRefs);\n    },\n    [canvases]\n  );\n\n  return (\n    <div className=\"Canvas\" ref={componentRef}>\n      {canvases};\n    </div>\n  );\n}\n","import { useState, useRef, useEffect } from \"react\";\nimport \"./HandleZoom.scss\";\nimport WaveformData from \"waveform-data\";\nimport { useAppSelector } from \"../../../redux/hooks\";\nimport {\n  RefObject,\n  createZoomLevelElements,\n  scaleX,\n} from \"../../../utils/zoomLevels\";\nimport { calculateScaleX } from \"../../../utils/canvas\";\n\ninterface Params {\n  waveform: WaveformData;\n  parentRef: React.RefObject<HTMLDivElement>;\n  trackId: string;\n}\n\nexport default function HandleZoom({ waveform, parentRef, trackId }: Params) {\n  const [scalingFactor, setScalingFactor] = useState(128);\n  const { zoomLevel } = useAppSelector((state) => state.zoomLevel);\n  const { gain } = useAppSelector((state) => state.waveformStates[trackId]);\n  const [html, setHtml] = useState<JSX.Element[]>([]);\n\n  const componentRef = useRef<HTMLDivElement>(null);\n  const zoomLevelRefs = useRef<RefObject>({});\n\n  useEffect(function () {\n    const component = componentRef.current!;\n    component.style.height = parentRef.current?.offsetHeight + \"px\";\n    setHtml(createZoomLevelElements(waveform, zoomLevelRefs));\n  }, []);\n\n  //Display current waveform and scale horizontally to match zoom level\n  useEffect(\n    function () {\n      if (zoomLevelRefs.current[\"_128\"]) {\n        const intermediateZoomScale = calculateScaleX(zoomLevel);\n        const currentScalingFactor = zoomLevel / intermediateZoomScale;\n        const currentWaveform =\n          zoomLevelRefs.current[`_${currentScalingFactor}`]!;\n        currentWaveform.style.opacity = \"1\";\n        if (scalingFactor !== currentScalingFactor) {\n          const previousWaveform = zoomLevelRefs.current[`_${scalingFactor}`]!;\n          previousWaveform.style.opacity = \"0\";\n          setScalingFactor(currentScalingFactor);\n        }\n        scaleX(currentWaveform, intermediateZoomScale);\n      }\n    },\n    [zoomLevel]\n  );\n\n  useEffect(\n    function () {\n      const component = componentRef.current!;\n      component.style.transform = `scaleY(${gain})`;\n    },\n    [gain]\n  );\n\n  return (\n    <div className=\"HandleZoom\" ref={componentRef}>\n      {html}\n    </div>\n  );\n}\n","import { WaveformData } from \"waveform-data\";\nimport Canvas from \"../componenents/Waveform/Canvas/Canvas\";\nimport { minimumZoomLevel } from \"../constants/constants\";\n\nexport interface RefObject {\n  [key: string]: HTMLDivElement | null;\n}\n\n//Creates required Canvas components at correct zoom levels assigns a ref to each\nexport function createZoomLevelElements(\n  waveform: WaveformData,\n  refObject: React.MutableRefObject<RefObject>\n): JSX.Element[] {\n  let html: JSX.Element[] = [];\n  let i = minimumZoomLevel;\n  do {\n    const zoomedWaveform = waveform.resample({ scale: i });\n    const string = \"_\" + i;\n    const div = (\n      <div\n        key={string}\n        ref={(element) => (refObject.current[string] = element)}\n        className=\"div__zoom-level\"\n      >\n        <Canvas waveform={zoomedWaveform} />\n      </div>\n    );\n    html.push(div);\n    i *= 2;\n  } while (i < 35000);\n  return html;\n}\n\nexport function scaleX(canvas: HTMLDivElement, scaleAmount: number): void {\n  canvas.style.transformOrigin = \"0 0\";\n  canvas.style.transform = `scaleX(${1 / scaleAmount})`;\n}\n","import { useEffect, useState, useRef } from \"react\";\nimport \"./Waveform.scss\";\nimport { useAppSelector } from \"../../redux/hooks\";\nimport { pixelsPerBar } from \"../../utils/canvas\";\nimport { loadAudioFile } from \"../../utils/loadAudioFile\";\nimport WaveformData from \"waveform-data\";\nimport HandleDrag from \"./HandleDrag/HandleDrag\";\nimport HandleZoom from \"./HandleZoom/HandleZoom\";\n\nexport default function Waveform({ id }: { id: string }) {\n  const parentRef = useRef<HTMLDivElement>(null);\n  const componentRef = useRef<HTMLDivElement>(null);\n\n  const [waveform, setWaveform] = useState<WaveformData | null>(null);\n\n  const { position, startOffset } = useAppSelector(\n    (state) => state.waveformStates[id]\n  );\n  const { zoomLevel } = useAppSelector((state) => state.zoomLevel);\n\n  const zoomLevelRef = useRef(zoomLevel);\n  let pixels_per_bar = pixelsPerBar(174, zoomLevel);\n\n  // Load audio file and handle user input to move waveforms along the sequencer\n  useEffect(function () {\n    loadAudioFile(setWaveform);\n  }, []);\n\n  useEffect(\n    function () {\n      if (waveform) {\n        const length = waveform.resample({ scale: zoomLevel }).length;\n        const parent = componentRef.current!;\n        parent.style.width = length + \"px\";\n      }\n    },\n    [zoomLevel]\n  );\n\n  //Positions waveform at correct bar when changing zoom.\n  useEffect(\n    function () {\n      componentRef.current!.style.left = position * pixels_per_bar + \"px\";\n    },\n    [position, zoomLevel]\n  );\n\n  //Positions waveform at correct start offset position when changing zoom\n  useEffect(\n    function () {\n      const parent = parentRef.current!;\n      parent.style.left = startOffset * pixels_per_bar + \"px\";\n    },\n    [zoomLevel, startOffset]\n  );\n\n  useEffect(\n    function () {\n      zoomLevelRef.current = zoomLevel;\n    },\n    [zoomLevel]\n  );\n\n  return (\n    <div className=\"Waveform\" ref={componentRef}>\n      <div className=\"Waveform__content-container\" ref={parentRef}>\n        {waveform ? (\n          <HandleZoom\n            waveform={waveform}\n            parentRef={componentRef}\n            trackId=\"1\"\n          />\n        ) : null}\n        <HandleDrag parentRef={componentRef} />\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useRef } from \"react\";\nimport \"./TrackLane.scss\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport BarNumbersAndLines from \"../BarNumbersAndLines/BarNumbersAndLines\";\nimport {\n  calculateSequencerLengthPx,\n  drawBarLines,\n} from \"../../../../utils/canvas\";\nimport Waveform from \"../../../Waveform/Waveform\";\n\nexport default function TrackLane() {\n  const componentRef = useRef<HTMLDivElement>(null);\n  const ids = useAppSelector((state) => state.waveformIds);\n  const zoomLevel = useAppSelector((state) => state.zoomLevel.zoomLevel);\n  const sequencerLengthBars = useAppSelector(\n    (state) => state.sequencerLength.requiredLengthBars\n  );\n\n  useEffect(\n    function () {\n      const sequencerLengthPx = calculateSequencerLengthPx(\n        sequencerLengthBars,\n        174,\n        zoomLevel\n      );\n      const component = componentRef.current;\n      if (component) {\n        component.style.width = sequencerLengthPx + \"px\";\n      }\n    },\n    [zoomLevel, sequencerLengthBars]\n  );\n\n  return (\n    <div className=\"TrackLane\" ref={componentRef}>\n      <BarNumbersAndLines\n        drawToCanvas={drawBarLines}\n        canvasClassName=\"bar-lines__canvas\"\n        componentClassName=\"bar-lines\"\n      />\n      <div className=\"TrackLane__waveform__container\">\n        {ids[\"1\"] ? <Waveform id=\"1\" /> : <div></div>}\n      </div>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface ScrollPositionState {\n  barsLeft: number;\n  barsRight: number;\n  pxLeft: number;\n  pxRight: number;\n}\n\ninterface SetState {\n  barsLeft: number;\n  barsRight: number;\n  pxLeft: number;\n  pxRight: number;\n}\n\nconst initialState: ScrollPositionState = {\n  barsLeft: 0,\n  barsRight: 0,\n  pxLeft: 0,\n  pxRight: 0,\n};\n\nexport const scrollPositionSlice = createSlice({\n  name: \"Scroll Position\",\n  initialState,\n  reducers: {\n    setScrollPosition: (state, action: PayloadAction<SetState>) => {\n      state.barsLeft = action.payload.barsLeft;\n      state.barsRight = action.payload.barsRight;\n      state.pxLeft = action.payload.pxLeft;\n      state.pxRight = action.payload.pxRight;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setScrollPosition } = scrollPositionSlice.actions;\n\nexport default scrollPositionSlice.reducer;\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./Main.scss\";\nimport \"../TrackControl/TrackControl\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { addWaveform } from \"../../redux/slices/waveformStateSlice\";\nimport { addId } from \"../../redux/slices/waveformIdsSlice\";\nimport TrackControl from \"../TrackControl/TrackControl\";\nimport BarNumbersAndLines from \"./Sequencer/BarNumbersAndLines/BarNumbersAndLines\";\nimport { drawBarNumbers } from \"../../utils/canvas\";\nimport TrackLane from \"./Sequencer/TrackLane/TrackLane\";\nimport { pixelsPerBar } from \"../../utils/canvas\";\nimport { setScrollPosition } from \"../../redux/slices/scrollPositionSlice\";\n\nexport default function Main() {\n  /* eslint-disable */\n  const [state, setState] = useState(\"\");\n  /* eslint-enable */\n  const dispatch = useAppDispatch();\n  const sequencerRef = useRef<HTMLDivElement>(null);\n  const { zoomLevel, mouseDown } = useAppSelector((state) => state.zoomLevel);\n  const scrollPosition = useAppSelector((state) => state.scrollPosition);\n  const pixels_per_bar = pixelsPerBar(174, zoomLevel);\n\n  function handleScroll(): void {\n    const sequencer = sequencerRef.current;\n    setState(\"re-redener\");\n    if (sequencer && !mouseDown) {\n      const barsLeft = (sequencer.scrollLeft - 16) / pixels_per_bar;\n      const barsRight =\n        (sequencer.scrollLeft + sequencer.offsetWidth - 16) / pixels_per_bar;\n      const pxLeft = sequencer.scrollLeft;\n      const pxRight = pxLeft + sequencer.offsetWidth;\n      dispatch(setScrollPosition({ barsLeft, barsRight, pxLeft, pxRight }));\n    }\n  }\n\n  useEffect(\n    function () {\n      const sequencer = sequencerRef.current;\n      if (sequencer) {\n        let pxLeft = scrollPosition.barsLeft * pixels_per_bar + 16;\n        if (scrollPosition.barsLeft < 0) {\n          pxLeft = scrollPosition.pxLeft;\n        }\n        sequencer.scrollLeft = pxLeft;\n        const newScrollState = { ...scrollPosition };\n        newScrollState.pxLeft = pxLeft;\n        newScrollState.pxRight = pxLeft + sequencer.offsetWidth;\n        dispatch(setScrollPosition(newScrollState));\n      }\n    },\n    [zoomLevel]\n  );\n\n  useEffect(function () {\n    dispatch(\n      addWaveform({\n        id: \"1\",\n        startPosition: 0,\n      })\n    );\n\n    dispatch(\n      addId({\n        id: \"1\",\n      })\n    );\n  }, []);\n\n  return (\n    <div className=\"Main\">\n      <div className=\"sidebar\">\n        <button className=\"sidebar__add-track\">+ Add Track</button>\n        <TrackControl />\n      </div>\n      <div className=\"sequencer\" ref={sequencerRef} onScroll={handleScroll}>\n        <div></div>\n        <div>\n          <BarNumbersAndLines\n            drawToCanvas={drawBarNumbers}\n            canvasClassName=\"BarNumbers__canvas\"\n            componentClassName=\"BarNumbers\"\n          />\n          <div className=\"track-container\" id=\"track-1\">\n            <TrackLane></TrackLane>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface ZoomLevelState {\n  zoomLevel: number;\n  mouseDown: boolean;\n}\n\nconst initialState: ZoomLevelState = { zoomLevel: 30000, mouseDown: false };\n\nexport const zoomLevelStateSlice = createSlice({\n  name: \"Zoom Level\",\n  initialState,\n  reducers: {\n    setZoomLevel: (state, action: PayloadAction<number>) => {\n      state.zoomLevel = action.payload;\n    },\n    setMouseDown: (state, action: PayloadAction<boolean>) => {\n      state.mouseDown = action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setZoomLevel, setMouseDown } = zoomLevelStateSlice.actions;\n\nexport default zoomLevelStateSlice.reducer;\n","import { handleRangeBias, mapNumberRange, convertPixelsToRem } from \"./utils\";\nimport { MouseInput } from \"./handleMouseInput\";\n\ntype SetValue = React.Dispatch<\n  React.SetStateAction<{\n    value: number;\n    lastValue: number;\n  }>\n>;\n\nexport function setValueToPos(\n  ref: HTMLDivElement,\n  value: number,\n  min: number,\n  max: number,\n  mainAxisLength: number,\n  mainAxisOffset: number,\n  knubOffset: number\n): void {\n  const valueInRem = mapNumberRange(\n    value,\n    min,\n    max,\n    0 + mainAxisOffset,\n    mainAxisLength\n  );\n  ref.style.transform = `translateX(${\n    -(mainAxisLength - valueInRem) + knubOffset\n  }rem)`;\n}\n\nexport function handleMouseMove(\n  min: number,\n  max: number,\n  mainAxisLength: number,\n  mainAxisOffset: number,\n  mouse: MouseInput,\n  setValue: SetValue\n): void {\n  if (mouse.mouse.isDown) {\n    setValue((s) => {\n      const lastValueRem = mapNumberRange(\n        s.lastValue,\n        min,\n        max,\n        0 + mainAxisOffset,\n        mainAxisLength\n      );\n      let currentValue =\n        lastValueRem + convertPixelsToRem(mouse.mouse.x.distanceTravelled);\n      if (currentValue > mainAxisLength) currentValue = mainAxisLength;\n      if (currentValue < 0 + mainAxisOffset) currentValue = 0 + mainAxisOffset;\n      currentValue = mapNumberRange(\n        currentValue,\n        0 + mainAxisOffset,\n        mainAxisLength,\n        min,\n        max\n      );\n\n      const newState = { ...s };\n      newState.value = currentValue;\n      return newState;\n    });\n  }\n}\n\nexport function handleMouseUp(\n  mouse: MouseInput,\n  lastValue: number,\n  setValue: SetValue\n): void {\n  if (mouse.mouse.isDown) {\n    setValue((s) => {\n      const newState = { ...s };\n      newState.lastValue = newState.value;\n      return newState;\n    });\n  }\n}\n\nexport function drawToCanvas(canvas: HTMLCanvasElement, interval: number) {\n  const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\")!;\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = \"white\";\n  const gap = 0.2;\n\n  for (let i = 0; i <= 1; i += interval) {\n    const pos = handleRangeBias(i, 0.4, \"exp\")! * canvas.width;\n    ctx.moveTo(pos + 0.5, canvas.height * 0.6);\n    ctx.lineTo(pos + 0.5, canvas.height * 0.8);\n  }\n  ctx.moveTo(0, canvas.height * gap);\n  ctx.lineTo(canvas.width, canvas.height * gap);\n  ctx.stroke();\n}\n","import { MouseState, HandleMouseInput, NewMouseState } from \"../types/types\";\n\nconst handleMouseDown: HandleMouseInput = function (\n  this: NewMouseState,\n  e,\n  parentRef?,\n  callback?\n) {\n  e.preventDefault();\n  this.mouse.isDown = true;\n  this.mouse.y.start = e.clientY;\n  this.mouse.x.start = e.clientX;\n  if (callback) {\n    callback(this.mouse, parentRef);\n  }\n};\n\nconst handleMouseMove: HandleMouseInput = function (\n  this: NewMouseState,\n  e,\n  parentRef?,\n  callback?\n) {\n  if (this.mouse.isDown) {\n    this.mouse.x.distanceTravelled = e.clientX - this.mouse.x.start;\n    this.mouse.y.distanceTravelled = this.mouse.y.start - e.clientY;\n    if (callback) {\n      callback(this.mouse, parentRef);\n    }\n  }\n};\n\nconst handleMouseUp: HandleMouseInput = function (\n  this: NewMouseState,\n  e,\n  parentRef?,\n  callback?\n) {\n  if (this.mouse.isDown) {\n    this.mouse.x.end = e.clientX;\n    this.mouse.y.end = e.clientY;\n    if (callback) {\n      callback(this.mouse, parentRef);\n    }\n    this.mouse.isDown = false;\n  }\n};\n\nexport class MouseInput {\n  readonly mouse: MouseState;\n  handleDown: HandleMouseInput;\n  handleMove: HandleMouseInput;\n  handleUp: HandleMouseInput;\n\n  constructor() {\n    this.mouse = {\n      isDown: false,\n      y: {\n        start: 0,\n        end: 0,\n        distanceTravelled: 0,\n      },\n      x: {\n        start: 0,\n        end: 0,\n        distanceTravelled: 0,\n      },\n    };\n    this.handleDown = handleMouseDown.bind(this);\n    this.handleMove = handleMouseMove.bind(this);\n    this.handleUp = handleMouseUp.bind(this);\n  }\n}\n","import { useRef, useEffect, useState } from \"react\";\nimport \"./ZoomSlider.scss\";\nimport { drawToCanvas } from \".././../utils/rangeSlider\";\nimport { RangeSlider } from \"../../types/types\";\nimport { addGenericEventListener } from \"../../utils/utils\";\nimport {\n  setValueToPos,\n  handleMouseMove,\n  handleMouseUp,\n} from \".././../utils/rangeSlider\";\nimport { MouseInput } from \"../../utils/handleMouseInput\";\nimport { convertPixelsToRem, getVariableStyle } from \"../../utils/utils\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { setMouseDown } from \"../../redux/slices/zoomLevelSlice\";\n\nexport default function ZoomSlider({\n  min,\n  max,\n  init,\n  style,\n  onChange,\n}: RangeSlider) {\n  const parentRef = useRef<HTMLDivElement>(null);\n  const knubRef = useRef<HTMLDivElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [state, setState] = useState({ value: init, lastValue: init });\n  const mouse = new MouseInput();\n  const knubSize = 0.4;\n\n  const accentColor = getVariableStyle(\"--accent-color\");\n  const darkAlt = getVariableStyle(\"--dark-alt\");\n\n  const dispatch = useAppDispatch();\n\n  function applyStyles(\n    parent: HTMLDivElement,\n    knub: HTMLDivElement,\n    canvas: HTMLCanvasElement,\n    container: HTMLDivElement,\n    svg: SVGSVGElement,\n    knubSize: number, // rem\n    padding: number // rem\n  ) {\n    parent.style.padding = padding + \"rem\";\n    parent.style.width = style.mainAxisLength + \"rem\";\n    parent.style.height = \"100%\";\n    knub.style.height = style.crossAxisLength * knubSize * 1.5 + \"rem\";\n    knub.style.width = style.crossAxisLength * knubSize + \"rem\";\n    container.style.height = \"100%\";\n    container.style.width = \"100%\";\n    canvas.width = container.offsetWidth;\n    canvas.height = container.offsetHeight;\n    svg.style.width = style.crossAxisLength * knubSize + \"rem\";\n    svg.style.fill = accentColor;\n    svg.style.stroke = darkAlt;\n    svg.style.strokeWidth = \"1\";\n  }\n\n  useEffect(function () {\n    const parent = parentRef.current!;\n    const knub = knubRef.current!;\n    const canvas = canvasRef.current!;\n    const container = containerRef.current!;\n    const svg = svgRef.current!;\n    applyStyles(parent, knub, canvas, container, svg, knubSize, 0.5);\n\n    drawToCanvas(canvas, 0.04);\n\n    setValueToPos(\n      knub,\n      init,\n      min,\n      max,\n      convertPixelsToRem(canvas.width),\n      0,\n      knubSize\n    );\n\n    addGenericEventListener(knub, \"mousedown\", mouse.handleDown);\n\n    addGenericEventListener(window, \"mousemove\", (e: MouseEvent) =>\n      mouse.handleMove(e, knub, () => {\n        dispatch(setMouseDown(true));\n        handleMouseMove(\n          min,\n          max,\n          style.mainAxisLength,\n          style.crossAxisLength,\n          mouse,\n          setState\n        );\n      })\n    );\n\n    addGenericEventListener(window, \"mouseup\", (e: MouseEvent) =>\n      mouse.handleUp(e, knub, () => {\n        dispatch(setMouseDown(false));\n        handleMouseUp(mouse, state.lastValue, setState);\n      })\n    );\n  }, []);\n\n  useEffect(\n    function () {\n      const knub = knubRef.current!;\n      const canvas = canvasRef.current!;\n      setValueToPos(\n        knub,\n        state.value,\n        min,\n        max,\n        convertPixelsToRem(canvas.width),\n        0,\n        knubSize\n      );\n      onChange(state.value);\n    },\n    [state.value]\n  );\n\n  const path = \"M 0 0 L 7 0 L 7 6 L 4 12 L 3 12 L 0 6 L 0 0\";\n  const viewBox = \"0 0 7 12\";\n\n  return (\n    <div className=\"ZoomSlider\" ref={parentRef}>\n      <div className=\"ZoomSlider__container\" ref={containerRef}>\n        <canvas\n          className=\"ZoomSlider__container__canvas\"\n          ref={canvasRef}\n        ></canvas>\n        <div className=\"ZoomSlider__container__knub\" ref={knubRef}>\n          <svg\n            className=\"ZoomSlider__container__knub__svg\"\n            viewBox={viewBox}\n            ref={svgRef}\n          >\n            <path d={path} />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import \"./ZoomControl.scss\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\nimport { setZoomLevel } from \"../../../redux/slices/zoomLevelSlice\";\nimport { handleRangeBias, mapNumberRange } from \"../../../utils/utils\";\nimport ZoomSlider from \"../../ZoomSlider/ZoomSlider\";\nimport { minimumZoomLevel } from \"../../../constants/constants\";\n\nexport default function ZoomControl() {\n  const dispatch = useAppDispatch();\n  const min = 0;\n  const max = 1;\n  function changeZoomLevel(value: number): void {\n    let mappedValue: number = handleRangeBias(value, 0.7, \"log\")!;\n    mappedValue = mapNumberRange(\n      mappedValue,\n      min,\n      max,\n      minimumZoomLevel,\n      40000\n    );\n    dispatch(setZoomLevel(mappedValue));\n  }\n  return (\n    <div className=\"ZoomControl\">\n      <ZoomSlider\n        init={1}\n        max={1}\n        min={0}\n        style={{ mainAxisLength: 15, crossAxisLength: 2 }}\n        onChange={changeZoomLevel}\n      />\n    </div>\n  );\n}\n","import { mapNumberRange } from \"./utils\";\n\nexport function handleBoundaries(\n  min: number,\n  max: number,\n  currentValue: number\n) {\n  if (currentValue < min) {\n    currentValue = min;\n  }\n  if (currentValue > max) {\n    currentValue = max;\n  }\n  return currentValue;\n}\n\nexport class DialState {\n  start: number;\n  value: number;\n  constructor(value: number) {\n    this.value = value;\n    this.start = value;\n  }\n}\n\nexport function initializeDialPos(init: number, min: number, max: number) {\n  return mapNumberRange(init, min, max, -130, 130);\n}\n","/* eslint-disable */\nimport { useRef, useEffect, useState } from \"react\";\nimport \"./Dial.scss\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { setGain } from \"../../redux/slices/waveformStateSlice\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { MouseInput } from \"../../utils/handleMouseInput\";\nimport { NewMouseState, MouseState } from \"../../types/types\";\nimport { handleBoundaries } from \"../../utils/dial\";\nimport { initializeDialPos } from \"../../utils/dial\";\nimport {\n  amplitudeToDecibels,\n  decibelsToAmplitude,\n  handleRangeBias,\n  mapNumberRange,\n} from \"../../utils/utils\";\nimport { DialState } from \"../../utils/dial\";\nimport { DialType } from \"../../types/types\";\nimport { addGenericEventListener } from \"../../utils/utils\";\n\nexport default function Dial({\n  min,\n  max,\n  step,\n  init,\n  log,\n  logType,\n  dbType,\n  waveformId,\n}: DialType) {\n  const dispatch: AppDispatch = useAppDispatch();\n  const knobRef = useRef<HTMLDivElement>(null);\n  const [dialPos, setDialPos] = useState<number>(0);\n  const mouse = new MouseInput();\n  const initDialVal = initializeDialPos(init, min, max);\n  const dial = new DialState(initDialVal);\n\n  function mapMouseToDial(mouse: MouseState) {\n    const change = mouse.x.distanceTravelled * 2;\n    let valueInDeg = dial.start + change;\n    if (valueInDeg > 130) valueInDeg = 130;\n    if (valueInDeg < -130) valueInDeg = -130;\n    return valueInDeg;\n  }\n\n  function handleMouseMove(\n    mouse: MouseState,\n    ref: HTMLDivElement | undefined\n  ): void {\n    let state = 0;\n    if (mouse.isDown) {\n      setDialPos((s): number => {\n        state = s;\n        return mapMouseToDial(mouse);\n      });\n    }\n  }\n\n  function handleMouseUp(\n    mouse: MouseState,\n    ref: HTMLDivElement | undefined\n  ): void {\n    if (mouse.isDown) {\n      setDialPos((s): number => {\n        dial.start = s;\n        return s;\n      });\n    }\n  }\n\n  useEffect(function () {\n    setDialPos(dial.value);\n    const knob = knobRef.current;\n    if (knob) {\n      addGenericEventListener(knob, \"mousedown\", (e: MouseEvent) =>\n        mouse.handleDown(e, knob)\n      );\n      addGenericEventListener(window, \"mousemove\", (e: MouseEvent) => {\n        mouse.handleMove(e, knob, handleMouseMove);\n      });\n      addGenericEventListener(window, \"mouseup\", (e: MouseEvent) =>\n        mouse.handleUp(e, knob, handleMouseUp)\n      );\n    }\n  }, []);\n\n  useEffect(\n    function () {\n      if (knobRef.current) {\n        knobRef.current.style.transform = `rotate(${dialPos}deg)`;\n      }\n    },\n    [dialPos]\n  );\n\n  return (\n    <div className=\"Dial\">\n      <div className=\"Dial__knob\">\n        <div className=\"Dial__knob__background\"></div>\n        <div className=\"Dial__knob__highlight\"></div>\n        <div className=\"Dial__knob__line__container\" ref={knobRef}>\n          <div className=\"Dial__knob__line\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// function moveKnob(mouse: MouseState, knobRef) {\n//   currentValue = startingValue + mouse.y.distanceTravelled ;\n//   if (currentValue < min) currentValue = min;\n//   if (currentValue > max) currentValue = max;\n//   currentValue = Math.floor(currentValue / step) * step;\n//   currentValue = mapNumberRange(currentValue, min, max, 0, 1);\n//   currentValue = handleRangeBias(currentValue, log, logType) as number;\n//   // if (dbType === \"db\") currentValue = amplitudeToDecibels(currentValue);\n// }\n","import { useRef, useEffect, useState } from \"react\";\nimport \"./VolumeSlider.scss\";\nimport { MouseInput } from \"../../utils/handleMouseInput\";\nimport { addGenericEventListener } from \"../../utils/utils\";\nimport {\n  setValueToPos,\n  handleMouseMove,\n  handleMouseUp,\n} from \".././../utils/rangeSlider\";\nimport { VolumeSliderType } from \"../../types/types\";\nimport { useAppDispatch } from \"../../redux/hooks\";\nimport { setMouseDown } from \"../../redux/slices/waveformStateSlice\";\n\nexport default function VolumeSlider({\n  min,\n  max,\n  init,\n  onChange,\n  style,\n  id,\n}: VolumeSliderType) {\n  const parentRef = useRef<HTMLDivElement>(null);\n  const handleRef = useRef<HTMLDivElement>(null);\n  const knubRef = useRef<HTMLDivElement>(null);\n  const [state, setState] = useState({ value: init, lastValue: init });\n  const [localMouseDown, setLocalMouseDown] = useState(false);\n  const mouse = new MouseInput();\n  const dipatch = useAppDispatch();\n\n  function applyStyles(parent: HTMLDivElement, knub: HTMLDivElement) {\n    parent.style.width = style.mainAxisLength + \"rem\";\n    parent.style.height = style.crossAxisLength + \"rem\";\n    knub.style.width = style.crossAxisLength + \"rem\";\n    knub.style.height = style.crossAxisLength + \"rem\";\n  }\n\n  useEffect(function () {\n    const parent = parentRef.current!;\n    const handle = handleRef.current!;\n    const knub = knubRef.current!;\n\n    applyStyles(parent, knub);\n\n    setValueToPos(\n      handle,\n      init,\n      min,\n      max,\n      style.mainAxisLength,\n      style.crossAxisLength,\n      0\n    );\n\n    addGenericEventListener(knub, \"mousedown\", (e: MouseEvent) => {\n      setLocalMouseDown(true);\n      mouse.handleDown(e);\n    });\n\n    addGenericEventListener(window, \"mousemove\", (e: MouseEvent) => {\n      mouse.handleMove(e, knub, () => {\n        handleMouseMove(\n          min,\n          max,\n          style.mainAxisLength,\n          style.crossAxisLength,\n          mouse,\n          setState\n        );\n      });\n    });\n\n    addGenericEventListener(window, \"mouseup\", (e: MouseEvent) => {\n      setLocalMouseDown(false);\n      mouse.handleUp(e, handle, () =>\n        handleMouseUp(mouse, state.lastValue, setState)\n      );\n    });\n  }, []);\n\n  useEffect(\n    function () {\n      const handle = handleRef.current!;\n      setValueToPos(\n        handle,\n        state.value,\n        min,\n        max,\n        style.mainAxisLength,\n        style.crossAxisLength,\n        0\n      );\n      onChange(state.value);\n    },\n    [state.value]\n  );\n\n  useEffect(\n    function () {\n      dipatch(setMouseDown({ id, value: localMouseDown }));\n    },\n    [localMouseDown]\n  );\n\n  return (\n    <div className=\"VolumeSlider\" ref={parentRef}>\n      <div className=\"VolumeSlider__handle\" ref={handleRef}>\n        <div className=\"VolumeSlider__handle__knub\" ref={knubRef}></div>\n      </div>\n    </div>\n  );\n}\n","import \"./WaveformControl.scss\";\nimport Dial from \"../../Dial/Dial\";\nimport VolumeSlider from \"../../VolumeSlider/VolumeSlider\";\nimport { useAppDispatch } from \"../../../redux/hooks\";\nimport { setGain } from \"../../../redux/slices/waveformStateSlice\";\n\nexport default function WaveformControl() {\n  const dispatch = useAppDispatch();\n  function changeVolume(value: number): void {\n    dispatch(setGain({ id: \"1\", value }));\n  }\n  return (\n    <div className=\"WaveformControl\">\n      <Dial\n        min={0}\n        max={100}\n        step={1}\n        init={50}\n        log={0}\n        logType=\"log\"\n        dbType=\"linear\"\n        waveformId=\"1\"\n      />\n      <VolumeSlider\n        style={{ mainAxisLength: 10, crossAxisLength: 1 }}\n        min={0}\n        max={2}\n        init={1}\n        onChange={(val) => {\n          changeVolume(val);\n        }}\n        id=\"1\"\n      />\n    </div>\n  );\n}\n\n// root bpm\n// gain / volume\n// pan\n// start offset\n// Name\n","import React from \"react\";\nimport \"./BottomSection.scss\";\nimport ZoomControl from \"./ZoomControl/ZoomControl\";\nimport WaveformControl from \"./WaveformControl/WaveformControl\";\n\nexport default function BottomSection() {\n  return (\n    <div className=\"BottomSection\">\n      <ZoomControl />\n      <WaveformControl />\n    </div>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport interface BarNumberDataState {\n  count: number;\n  currentPos: number;\n}\n\ninterface State {\n  loaded: boolean;\n  value: BarNumberDataState[][];\n}\n\nconst initialState: State = { value: [], loaded: false };\n\nexport const barNumberDataSlice = createSlice({\n  name: \"Bar Number Data\",\n  initialState,\n  reducers: {\n    setBarNumberData: (\n      state,\n      action: PayloadAction<BarNumberDataState[][]>\n    ) => {\n      state.value = action.payload;\n    },\n    setLoaded: (state) => {\n      state.loaded = true;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setBarNumberData, setLoaded } = barNumberDataSlice.actions;\n\nexport default barNumberDataSlice.reducer;\n","import { useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\";\nimport {\n  setBarNumberData,\n  setLoaded,\n} from \"../../redux/slices/barNumberDataSlice\";\nimport {\n  createBarNumberData,\n  calculateSequencerLengthPx,\n} from \"../../utils/canvas\";\n\nexport default function BarNumberData() {\n  const { zoomLevel } = useAppSelector((state) => state.zoomLevel);\n  const barsToBeDisplayed = useAppSelector(\n    (state) => state.sequencerLength.requiredLengthBars\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(\n    function () {\n      const sequencerLengthPx = calculateSequencerLengthPx(\n        barsToBeDisplayed,\n        174,\n        zoomLevel\n      );\n      const barNumberData = createBarNumberData(sequencerLengthPx, zoomLevel);\n      dispatch(setBarNumberData(barNumberData));\n      dispatch(setLoaded());\n    },\n    [zoomLevel, barsToBeDisplayed]\n  );\n\n  return null;\n}\n","import styled from \"styled-components\";\n\nconst borderWidth = 0.25;\nconst border = `${borderWidth}rem solid var(--light-main)`;\n\nexport const Wrapper = styled.div`\n  width: ${(props) => props.theme.width}rem;\n  background: white;\n  height: 100vh;\n  background: var(--dark-main);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  border-left: ${border};\n  font-size: 1rem;\n`;\n\nexport const Browser = styled.div``;\n\nexport const Title = styled.div`\n  height: 2em;\n  color: white;\n  font-size: 1em;\n  font-weight: 800;\n  text-align: center;\n  line-height: 2em;\n  background: ${(props) => props.theme.background};\n  position: relative;\n`;\n\nconst buttonWidth = 1.2;\n\nconst ButtonWrapper = styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n  background: var(--dark-main-faded);\n  height: ${buttonWidth}em;\n  width: ${buttonWidth}em;\n  border-radius: 50%;\n  position: absolute;\n  left: ${0.4 - borderWidth / 2}em;\n  top: 0.4em;\n  text-align: center;\n  font-size: 1em;\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 0.15rem;\n  overflow: hidden;\n  border: 0.05rem solid white;\n  transform: rotate(${(props) => props.theme.rotation}deg);\n`;\n\nconst Quarter = styled.div`\n  background: white;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Button = ({\n  rotation,\n  onClick,\n}: {\n  rotation: number;\n  onClick: () => void;\n}) => {\n  return (\n    <ButtonWrapper theme={{ rotation }} onClick={onClick}>\n      <Quarter />\n      <Quarter />\n      <Quarter />\n      <Quarter />\n    </ButtonWrapper>\n  );\n};\n\nconst RotatedLetter = styled.div`\n  transform: rotate(90deg);\n  transform-origin: top left;\n  width: 0px;\n  margin-top: 3rem;\n  margin-left: 0.8rem;\n  height: 0;\n  line-height: 0;\n`;\n\nexport function text(open: boolean): JSX.Element {\n  let text = <div>BROWSER</div>;\n  if (!open) {\n    text = <RotatedLetter>BROWSER</RotatedLetter>;\n  }\n  return text;\n}\n","import { Wrapper, Browser, Title, Button, text } from \"./FileBrowser.styles\";\nimport { useState } from \"react\";\n\nexport function FileBrowser() {\n  const [open, setOpen] = useState(true);\n\n  function toggleOpen() {\n    if (open) setOpen(false);\n    if (!open) setOpen(true);\n  }\n\n  return (\n    <Wrapper theme={{ width: open ? 30 : 2 }}>\n      <Title\n        theme={{\n          background: open ? \"var(--light-main)\" : \"inherit\",\n        }}\n      >\n        <Button rotation={open ? 45 : 0} onClick={toggleOpen} />\n        {text(open)}\n      </Title>\n      <Browser></Browser>\n    </Wrapper>\n  );\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface TotalBars {\n  lengthBars: number;\n  requiredLengthBars: number;\n}\n\ninterface SetState {\n  value: number;\n}\n\nconst initialState: TotalBars = { lengthBars: 250, requiredLengthBars: 250 };\n\nexport const sequencerLengthSlice = createSlice({\n  name: \"Sequencer length\",\n  initialState,\n  reducers: {\n    setLength: (state, action: PayloadAction<SetState>) => {\n      state.lengthBars = action.payload.value;\n    },\n    setRequiredLength: (state, action: PayloadAction<SetState>) => {\n      state.requiredLengthBars = action.payload.value;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setLength, setRequiredLength } = sequencerLengthSlice.actions;\n\nexport default sequencerLengthSlice.reducer;\n","import { useEffect } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { setRequiredLength } from \"../../redux/slices/sequencerLengthSlice\";\nimport { pixelsPerBar } from \"../../utils/canvas\";\n\nexport default function SetSequencerLength() {\n  const { pxLeft, pxRight } = useAppSelector((state) => state.scrollPosition);\n  const { zoomLevel } = useAppSelector((state) => state.zoomLevel);\n  let sequencerLengthBars = useAppSelector(\n    (state) => state.sequencerLength.lengthBars\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(\n    // Sets required sequencer length to the width of the window if sequencerLengthBars is less than this\n    function () {\n      const sequencerWidthPx = pxRight - pxLeft;\n      const sequencerWidthBars =\n        sequencerWidthPx / pixelsPerBar(174, zoomLevel);\n      if (sequencerLengthBars < sequencerWidthBars) {\n        sequencerLengthBars = sequencerWidthBars;\n      }\n      dispatch(setRequiredLength({ value: sequencerLengthBars }));\n    },\n    [zoomLevel, sequencerLengthBars]\n  );\n  return null;\n}\n","import \"./App.scss\";\nimport \"../Transport/Transport\";\nimport Transport from \"../Transport/Transport\";\nimport Main from \"../Main/Main\";\nimport BottomSection from \"../BottomSection/BottomSection\";\nimport BarNumberData from \"../Utilties/BarNumberData\";\nimport { FileBrowser } from \"../FileBrowser/FileBrowser\";\nimport SetSequencerLength from \"../Utilties/SetSequencerLength\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App__wrapper\">\n        <Transport />\n        <Main />\n        <BottomSection />\n      </div>\n      <FileBrowser />\n      <div className=\"utilities\">\n        <BarNumberData />\n        <SetSequencerLength />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport waveformStateReducer from \"./slices/waveformStateSlice\";\nimport waveformIdsReducer from \"./slices/waveformIdsSlice\";\nimport zoomLevelReducer from \"./slices/zoomLevelSlice\";\nimport sequencerLengthSlice from \"./slices/sequencerLengthSlice\";\nimport scrollPositionSlice from \"./slices/scrollPositionSlice\";\nimport barNumberDataSlice from \"./slices/barNumberDataSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    waveformStates: waveformStateReducer,\n    waveformIds: waveformIdsReducer,\n    zoomLevel: zoomLevelReducer,\n    sequencerLength: sequencerLengthSlice,\n    scrollPosition: scrollPositionSlice,\n    barNumberData: barNumberDataSlice,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./componenents/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // {/* </React.StrictMode>, */}\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}